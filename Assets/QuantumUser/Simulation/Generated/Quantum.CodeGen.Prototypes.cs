// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Fruit))]
  public unsafe partial class FruitPrototype : ComponentPrototype<Quantum.Fruit> {
    public Int32 Graphic;
    public Int32 Points;
    partial void MaterializeUser(Frame frame, ref Quantum.Fruit result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Fruit component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Fruit result, in PrototypeMaterializationContext context = default) {
        result.Graphic = this.Graphic;
        result.Points = this.Points;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.GameRules))]
  public unsafe partial class GameRulesPrototype : StructPrototype {
    public AssetRef<Map> Map;
    public Int32 MinLevel;
    public Int32 LevelRange;
    public Int32 TimerSeconds;
    partial void MaterializeUser(Frame frame, ref Quantum.GameRules result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.GameRules result, in PrototypeMaterializationContext context = default) {
        result.Map = this.Map;
        result.MinLevel = this.MinLevel;
        result.LevelRange = this.LevelRange;
        result.TimerSeconds = this.TimerSeconds;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Ghost))]
  public unsafe partial class GhostPrototype : ComponentPrototype<Quantum.Ghost> {
    public FPVector2 TargetPosition;
    public QBoolean ForceRandomMovement;
    public Quantum.QEnum8<GhostTargetMode> Mode;
    public Quantum.QEnum8<GhostState> State;
    public Quantum.QEnum8<GhostHouseState> GhostHouseState;
    public FP GhostHouseWaitTime;
    public FP TimeSinceEaten;
    public FP ScatterTimer;
    partial void MaterializeUser(Frame frame, ref Quantum.Ghost result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Ghost component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Ghost result, in PrototypeMaterializationContext context = default) {
        result.TargetPosition = this.TargetPosition;
        result.ForceRandomMovement = this.ForceRandomMovement;
        result.Mode = this.Mode;
        result.State = this.State;
        result.GhostHouseState = this.GhostHouseState;
        result.GhostHouseWaitTime = this.GhostHouseWaitTime;
        result.TimeSinceEaten = this.TimeSinceEaten;
        result.ScatterTimer = this.ScatterTimer;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.GridMover))]
  public unsafe partial class GridMoverPrototype : ComponentPrototype<Quantum.GridMover> {
    public FP SpeedMultiplier;
    public Int32 Direction;
    public Byte TeleportFrames;
    public QBoolean IsLocked;
    public QBoolean IsStationary;
    public FP DistanceMoved;
    public FP FreezeTime;
    partial void MaterializeUser(Frame frame, ref Quantum.GridMover result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.GridMover component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.GridMover result, in PrototypeMaterializationContext context = default) {
        result.SpeedMultiplier = this.SpeedMultiplier;
        result.Direction = this.Direction;
        result.TeleportFrames = this.TeleportFrames;
        result.IsLocked = this.IsLocked;
        result.IsStationary = this.IsStationary;
        result.DistanceMoved = this.DistanceMoved;
        result.FreezeTime = this.FreezeTime;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public SByte TargetDirection;
    public Button Bomb;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.TargetDirection = this.TargetDirection;
        result.Bomb = this.Bomb;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PacmanPlayer))]
  public unsafe partial class PacmanPlayerPrototype : ComponentPrototype<Quantum.PacmanPlayer> {
    public Quantum.Prototypes.RankingPrototype TotalRanking;
    public Quantum.Prototypes.RankingPrototype RoundRanking;
    public Quantum.Prototypes.RankingPrototype PreviousRoundRanking;
    public Int32 TotalScore;
    public Int32 RoundScore;
    public Int32 Bombs;
    public FP BombTravelTimer;
    public FP BombTravelTime;
    public FPVector2 BombStartPosition;
    public FPVector2 BombEndPosition;
    public Int32 PelletsEaten;
    public Int32 PelletChain;
    public FP PowerPelletTimer;
    public FP PowerPelletFullTimer;
    public Int32 GhostCombo;
    public QBoolean IsDead;
    public FP RespawnTimer;
    public FP Invincibility;
    public FP TemporaryInvincibility;
    partial void MaterializeUser(Frame frame, ref Quantum.PacmanPlayer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PacmanPlayer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PacmanPlayer result, in PrototypeMaterializationContext context = default) {
        this.TotalRanking.Materialize(frame, ref result.TotalRanking, in context);
        this.RoundRanking.Materialize(frame, ref result.RoundRanking, in context);
        this.PreviousRoundRanking.Materialize(frame, ref result.PreviousRoundRanking, in context);
        result.TotalScore = this.TotalScore;
        result.RoundScore = this.RoundScore;
        result.Bombs = this.Bombs;
        result.BombTravelTimer = this.BombTravelTimer;
        result.BombTravelTime = this.BombTravelTime;
        result.BombStartPosition = this.BombStartPosition;
        result.BombEndPosition = this.BombEndPosition;
        result.PelletsEaten = this.PelletsEaten;
        result.PelletChain = this.PelletChain;
        result.PowerPelletTimer = this.PowerPelletTimer;
        result.PowerPelletFullTimer = this.PowerPelletFullTimer;
        result.GhostCombo = this.GhostCombo;
        result.IsDead = this.IsDead;
        result.RespawnTimer = this.RespawnTimer;
        result.Invincibility = this.Invincibility;
        result.TemporaryInvincibility = this.TemporaryInvincibility;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerData))]
  public unsafe partial class PlayerDataPrototype : ComponentPrototype<Quantum.PlayerData> {
    public PlayerRef PlayerRef;
    public Int32 JoinTick;
    public QBoolean IsRoomHost;
    public QBoolean IsReady;
    public QBoolean IsSpectator;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerData result, in PrototypeMaterializationContext context = default) {
        result.PlayerRef = this.PlayerRef;
        result.JoinTick = this.JoinTick;
        result.IsRoomHost = this.IsRoomHost;
        result.IsReady = this.IsReady;
        result.IsSpectator = this.IsSpectator;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe partial class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef Player;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.Player = this.Player;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Ranking))]
  public unsafe partial class RankingPrototype : StructPrototype {
    public Byte UniqueRanking;
    public Byte SharedRanking;
    partial void MaterializeUser(Frame frame, ref Quantum.Ranking result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Ranking result, in PrototypeMaterializationContext context = default) {
        result.UniqueRanking = this.UniqueRanking;
        result.SharedRanking = this.SharedRanking;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
