global {
	byte PacmanCounter;
}

struct Ranking {
	byte UniqueRanking;
	byte SharedRanking;
}

component PacmanPlayer {
	Ranking TotalRanking;
	Ranking RoundRanking;
	Ranking PreviousRoundRanking;

	int TotalScore;
	int RoundScore;

	int Bombs;
	FP BombTravelTimer;
	FP BombTravelTime;
	FPVector2 BombStartPosition;
	FPVector2 BombEndPosition;

	int PelletsEaten;
	int PelletChain;

	FP PowerPelletTimer;
	FP PowerPelletFullTimer;
	int GhostCombo;

	bool IsDead;
	FP RespawnTimer;

	FP Invincibility;
	FP TemporaryInvincibility;
}

signal OnCharacterEaten(EntityRef entity, EntityRef other);

synced event CharacterEaten {
	EntityRef Pacman;
	EntityRef Other;
	int Combo;
	int GainedPoints;
}

signal OnPacmanScored(EntityRef entity, int points);

signal OnPacmanKilled(EntityRef entity);

signal OnPacmanRespawned(EntityRef entity);

synced event PacmanKilled {
	EntityRef Entity;
	FP RespawnInSeconds;
}

synced event PacmanScored {
	EntityRef Entity;
	PacmanPlayer Pacman;
	int GainedPoints;
	int TotalPoints;
}

event PacmanRespawned {
	EntityRef Entity;
}

event PacmanVulnerable {
	EntityRef Entity;
}

synced event PacmanCollectBomb {
	EntityRef Entity;
	int NewCount;
}

synced event PacmanUseBomb {
	EntityRef Entity;
	FPVector2 Target;
}

synced event PacmanLandBombJump {
	EntityRef Entity;
}